---
import { tv } from "tailwind-variants";
import Tag from "../Tag/Tag.astro";

export interface Props {
  title: string;
  description: string;
  author: string;
  tags: string[];
  publishedDate: string;
  thumbnail: string;
  slug: string;
}

const blogCardStyles = tv({
  slots: {
    card: "blog-card rounded-xl overflow-hidden transition-all duration-300 ease-in-out h-full relative hover:-translate-y-0.5 hover:shadow-[0_8px_24px_rgba(0,0,0,0.15)] dark:hover:shadow-[0_8px_24px_rgba(255,255,255,0.1)] group",
    link: "block no-underline text-inherit h-full relative",
    imageContainer: "absolute inset-0 w-full h-full",
    image: "w-full h-full object-cover",
    overlay:
      "absolute inset-0 w-full h-full bg-gradient-to-b from-black/30 to-black/75 transition-all duration-300 ease-in-out group-hover:from-black/40 group-hover:to-black/80",
    content: "relative z-20 p-6 md:p-4 grid gap-4 md:gap-3 h-full justify-start content-end",
    tags: "grid grid-flow-col auto-cols-max gap-2 justify-start",
    title:
      "text-xl md:text-lg font-bold leading-tight text-white m-0 [text-shadow:0_2px_6px_rgba(0,0,0,0.8),0_1px_3px_rgba(0,0,0,0.9)]",
    description:
      "text-white/95 leading-relaxed m-0 text-sm md:text-xs [text-shadow:0_2px_4px_rgba(0,0,0,0.7),0_1px_2px_rgba(0,0,0,0.8)]",
    meta: "grid grid-cols-[1fr_auto] md:grid-cols-1 gap-3 md:gap-1 items-center text-xs text-white/90 [text-shadow:0_2px_4px_rgba(0,0,0,0.7),0_1px_2px_rgba(0,0,0,0.8)]",
    date: "text-right md:text-left font-bold",
  },
});

const { title, description, tags, publishedDate, thumbnail, slug } = Astro.props;
const styles = blogCardStyles();
---

<article class={styles.card()}>
  <a href={`/blog/${slug}`} class={styles.link()}>
    <div class={styles.imageContainer()}>
      <img src={`https://image.otetoteto.io/${thumbnail}`} alt={title} loading="lazy" class={styles.image()} />
      <div class={styles.overlay()}></div>
    </div>
    <div class={styles.content()}>
      <div class={styles.tags()}>
        {tags.map((tag) => <Tag tag={tag} variant="outline" size="sm" />)}
      </div>
      <h2 class={styles.title()}>
        {title}
      </h2>
      <p class={styles.description()}>
        {description}
      </p>
      <div class={styles.meta()}>
        <time class={styles.date()} datetime={publishedDate}>
          {publishedDate}
        </time>
      </div>
    </div>
  </a>
</article>
