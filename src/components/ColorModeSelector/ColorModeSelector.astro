---

---

<div class="color-mode-selector">
  <button
    class="selector-trigger"
    type="button"
    aria-haspopup="true"
    aria-expanded="false"
    aria-label="カラーモード選択"
  >
    <span class="current-mode-icon" data-mode="system">
      <!-- システムアイコン（デフォルト） -->
      <svg
        width="18"
        height="18"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
        <line x1="8" y1="21" x2="16" y2="21"></line>
        <line x1="12" y1="17" x2="12" y2="21"></line>
      </svg>
    </span>
  </button>

  <div class="dropdown-menu" role="menu">
    <button class="dropdown-item" type="button" data-mode="light" role="menuitem">
      <svg
        class="item-icon"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
      ライト
    </button>

    <button class="dropdown-item" type="button" data-mode="dark" role="menuitem">
      <svg
        class="item-icon"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
      ダーク
    </button>

    <button class="dropdown-item active" type="button" data-mode="system" role="menuitem">
      <svg
        class="item-icon"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
        <line x1="8" y1="21" x2="16" y2="21"></line>
        <line x1="12" y1="17" x2="12" y2="21"></line>
      </svg>
      システム
    </button>
  </div>
</div>

<script>
  const selector = document.querySelector(".color-mode-selector");
  const items = selector?.querySelectorAll(".dropdown-item") as NodeListOf<HTMLButtonElement>;
  const currentIcon = selector?.querySelector(".current-mode-icon") as HTMLElement;
  const html = document.documentElement;

  type ColorMode = "light" | "dark" | "system";

  // アイコンの定義
  const icons: Record<ColorMode, string> = {
    light: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>`,
    dark: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>`,
    system: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
      <line x1="8" y1="21" x2="16" y2="21"></line>
      <line x1="12" y1="17" x2="12" y2="21"></line>
    </svg>`,
  };

  // 初期設定
  const savedMode = (localStorage.getItem("color-mode") as ColorMode) || "system";

  // カラーモードを適用
  function applyColorMode(mode: ColorMode) {
    if (mode === "system") {
      html.removeAttribute("data-color-mode");
    } else {
      html.setAttribute("data-color-mode", mode);
    }
  }

  // UIを更新
  function updateUI(mode: ColorMode) {
    if (!currentIcon) return;

    // トリガーのアイコンを更新
    currentIcon.innerHTML = icons[mode];
    currentIcon.setAttribute("data-mode", mode);

    // アクティブな項目を更新
    items?.forEach((item) => {
      const itemMode = item.dataset.mode as ColorMode;
      item.classList.toggle("active", itemMode === mode);
    });
  }

  // 初期状態を設定
  if (selector) {
    updateUI(savedMode);
    applyColorMode(savedMode);

    // ドロップダウンアイテムのクリック処理
    items?.forEach((item) => {
      item.addEventListener("click", (e) => {
        const target = e.currentTarget as HTMLButtonElement;
        const selectedMode = target?.dataset.mode as ColorMode;
        if (selectedMode) {
          localStorage.setItem("color-mode", selectedMode);
          applyColorMode(selectedMode);
          updateUI(selectedMode);
        }
      });
    });
  }
</script>

<style>
  .color-mode-selector {
    position: relative;

    .selector-trigger {
      display: grid;
      place-items: center;
      padding: 0.5rem;
      border: none;
      border-radius: 0.5rem;
      background: transparent;
      color: var(--text-color);
      cursor: pointer;
      transition: all 0.2s ease;
      width: 2.5rem;
      height: 2.5rem;

      &:hover {
        background: color-mix(in srgb, var(--text-color) 8%, transparent);

        .dropdown-menu {
          opacity: 1;
          visibility: visible;
          transform: translateY(0);
        }
      }
    }

    .current-mode-icon {
      display: grid;
      place-items: center;
    }

    .dropdown-menu {
      position: absolute;
      top: 100%;
      left: 0;
      margin-top: 0.25rem;
      width: 10rem;
      background: color-mix(in srgb, var(--text-color) 4%, transparent);
      border: none;
      border-radius: 0.5rem;
      box-shadow: 0 4px 12px color-mix(in srgb, var(--text-color) 15%, transparent);
      opacity: 0;
      visibility: hidden;
      transform: translateY(-0.5rem);
      transition: all 0.2s ease;
      z-index: 10;
      overflow: hidden;
      backdrop-filter: blur(8px);

      &:hover {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
      }
    }

    .selector-trigger:hover + .dropdown-menu,
    .dropdown-menu:hover {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .dropdown-item {
      width: 100%;
      display: grid;
      grid-template-columns: auto 1fr;
      align-items: center;
      gap: 0.75rem;
      padding: 0.75rem;
      border: none;
      background: transparent;
      color: var(--text-color);
      font-size: 0.875rem;
      cursor: pointer;
      transition: all 0.2s ease;
      text-align: start;
      white-space: nowrap;

      &:hover {
        background: color-mix(in srgb, var(--text-color) 12%, transparent);
      }

      &.active {
        background: color-mix(in srgb, var(--text-color) 20%, transparent);
        font-weight: 500;
      }
    }

    .item-icon {
      display: grid;
      align-items: center;
    }
  }
</style>
